<?xml version="1.0" encoding="UTF-8"?>
<launch>
	<!-- ======================================================= arguments ==================================================== -->
	<arg name="world_model" default="$(find dynamic_robot_localization_tests)/worlds/ship_interior.world" />
<!-- 	<arg name="world_model" default="$(find dynamic_robot_localization_tests)/worlds/ship_interior_with_new_objects.world" /> -->
	<arg name="map_file" default="$(find dynamic_robot_localization_tests)/maps/ship_interior/planar/ship_interior.yaml" />
	<arg name="rviz_config" default="-d $(find dynamic_robot_localization_tests)/rviz/dynamic_robot_localization.rviz" />	
	<arg name="robot_initial_x" default="-4.5" />
	<arg name="robot_initial_y" default="2.25" />
	<arg name="robot_initial_z" default="0.004665" />
	<arg name="robot_initial_yaw" default="-1.57" />
	<arg name="use_tilt_on_front_laser" default="false" />
	<arg name="assemble_front_and_back_laser" default="true" />
	<arg name="number_of_scans_to_assemble_per_cloud" default="2" />
	<arg name="timeout_for_cloud_assembly" default="1.0" />
	<arg name="reference_pointcloud_filename" default="$(find dynamic_robot_localization_tests)/maps/ship_interior/tridimensional/cache/ship_interior_preprocessed_50mm.pcd" />
	<arg name="reference_pointcloud_keypoints_filename" default="$(find dynamic_robot_localization_tests)/maps/ship_interior/tridimensional/cache/ship_interior_iss3d_keypoints_50mm.pcd" />
	<arg name="reference_pointcloud_descriptors_filename" default="$(find dynamic_robot_localization_tests)/maps/ship_interior/tridimensional/cache/ship_interior_shot_descriptors_50mm.pcd" />
	<arg name="measure_localization_computation_time" default="1" />
	<arg name="show_rviz" default="0" />



	<!-- ==================================================== gazebo simulator ================================================ -->
	<include file="$(find guardian_gazebo)/launch/guardian.launch">
		<arg name="world_model" default="$(arg world_model)" />
		<arg name="rviz_config" default="$(arg rviz_config)" />
		<arg name="use_tilt_on_front_laser" default="$(arg use_tilt_on_front_laser)" />
		<arg name="robot_initial_x" default="$(arg robot_initial_x)" />
		<arg name="robot_initial_y" default="$(arg robot_initial_y)" />
		<arg name="robot_initial_yaw" default="$(arg robot_initial_yaw)" />
	</include>

	<group if="$(arg show_rviz)">
		<node name="rviz" pkg="rviz" type="rviz" args="$(arg rviz_config)" />
	</group>

	<!-- ======================================================== 2D costmap ================================================== -->
	<!-- only activate static tf when using only odometry or ekf -->
	<!-- <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 /map /odom 100" /> -->
	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)">
		<param name="frame_id" value="map" />
	</node>



	<!-- ================================================ merge two LaserScan topics ========================================== -->
	<group if="$(arg assemble_front_and_back_laser)">
		<node pkg="topic_tools" type="relay" name="relay_tilt_scan_to_base_scan" args="base_scan tilt_scan" output="screen" />
	</group>



	<!-- ==================================================== localization system ============================================= -->
	<include file="$(find dynamic_robot_localization_tests)/launch/localization_systems/dynamic_robot_localization.launch">
		<arg name="robot_initial_x" default="$(arg robot_initial_x)" />
		<arg name="robot_initial_y" default="$(arg robot_initial_y)" />
		<arg name="robot_initial_z" default="$(arg robot_initial_z)" />
		<arg name="robot_initial_yaw" default="$(arg robot_initial_yaw)" />
		<arg name="number_of_scans_to_assemble_per_cloud" default="$(arg number_of_scans_to_assemble_per_cloud)" />
		<arg name="timeout_for_cloud_assembly" default="$(arg timeout_for_cloud_assembly)" />
		<!-- <arg name="reference_pointcloud_filename" default="$(arg reference_pointcloud_filename)" />
		<arg name="reference_pointcloud_keypoints_filename" default="$(arg reference_pointcloud_keypoints_filename)" />
		<arg name="reference_pointcloud_descriptors_filename" default="$(arg reference_pointcloud_descriptors_filename)" /> -->
	</include>



	<!-- ================================================= other localization systems ========================================== -->
	<!-- simulated localization -->
	<!-- <include file="$(find dynamic_robot_localization_tests)/launch/localization_systems/amcl_simulated.launch" /> -->

	<!-- amcl localization -->
	<!-- <include file="$(find dynamic_robot_localization_tests)/launch/localization_systems/amcl.launch">
		<arg name="robot_initial_x" default="$(arg robot_initial_x)" />
		<arg name="robot_initial_y" default="$(arg robot_initial_y)" />
		<arg name="robot_initial_yaw" default="$(arg robot_initial_yaw)" />
	</include> -->

	<!-- EFK Filter -->
	<!-- <include file="$(find dynamic_robot_localization_tests)/launch/localization_systems/ekf.launch" /> -->



	<!-- ===================================================== localization plots ============================================== -->
	<!-- <include file="$(find dynamic_robot_localization_tests)/launch/localization_plots.launch">
		<arg name="measure_localization_computation_time" default="$(arg measure_localization_computation_time)" />
	</include> -->



	<!-- ===================================================== navigation systems ============================================== -->	
	<!-- <include file="$(find dynamic_robot_localization_tests)/launch/navigation_systems/linear_navigation.launch" /> -->
	<!-- <include file="$(find guardian_navigation)/launch/move_base.launch" /> -->
	<!-- <include file="$(find guardian_navigation)/navigation_local/move_base_local.launch" /> -->
</launch>
